--Шаг 1 первая транзакция (с помощью агрегирующей функции выделяем первую дату платежа и уловите что платёж был успешней )
with first_payments as 
        (select user_id
                , date_trunc('day', min(transaction_datetime)) as first_payment_date
        from skyeng_db.payments
        where status_name = 'success'
        group by user_id
        ),
-- Шаг 2 календарные даты за 2016 (выделил тольок 2016 год и день)
all_dates as
        (select distinct date_trunc('day', class_start_datetime) AS dt
        From skyeng_db.classes
       where date_part('year', class_start_datetime) = 2016
       ),
-- Шаг 3 даты жизни студента (соединяем таблицы first_payments и all_dates и пишем неравенство для события после первого палтежа)
all_dates_by_user as 
         (select fp.user_id
                , ad.dt
        from first_payments fp 
            left join all_dates ad
            on ad.dt >= fp.first_payment_date 
        ),
-- Шаг 4 кол-во изменений баланса (выделяем кол-во успешных транзакций как начисление, так и списание и группируем по юзер)
payments_by_dates as 
        (select user_id
                 , date_trunc('day', transaction_datetime) as payment_date
                 , sum(classes) as transaction_balance_change
        from skyeng_db.payments
        where status_name = 'success'
        group by user_id, date_trunc('day', transaction_datetime)
        ),
--Шаг 5 Кол-во транзакций студента (с помощью окнной функции находим кумулятивную сумму скелив 2 таблици по юзер и дате)
payments_by_dates_cumsum as 
        (select adbu.user_id
                ,adbu.dt
                ,coalesce(transaction_balance_change,0)as transaction_balance_change
                , sum(coalesce(transaction_balance_change,0)) over (partition by adbu.user_id order by adbu.dt) as transaction_balance_change_cs
        from all_dates_by_user adbu
          left join payments_by_dates pbd
            on adbu.user_id = pbd.user_id
            and adbu.dt = pbd.payment_date
       ),
-- Шаг 6 Кол-во уроков за каждый день каждого ученика ( домножаем на -1 чтобы счиать как прошедший урок)
classes_by_dates as 
        (select user_id
                , date_trunc('day', class_start_datetime) as class_data
                , count(*)* -1 as classes
        from skyeng_db.classes
        where (class_status = 'success'
                or class_status ='failed_by_student')
                and class_type != 'trial'
        group by 1,2
        ),
-- Шаг 7 Кол-во пройденых уроков (с помощью окнной функции находим кумулятивную сумму скелив 2 таблици по юзер и дате)
classes_by_dates_dates_cumsum as
        (select adbu.user_id
                ,adbu.dt
                ,coalesce(classes,0) as classes
                , sum(coalesce(classes,0)) over (partition by adbu.user_id order by adbu.dt) as classes_cs
        from all_dates_by_user adbu
                left  join classes_by_dates cbd
                on adbu.user_id = cbd.user_id
                and adbu.dt = cbd.class_data
                ),
-- Шаг 8 баланс студента 
balances as 
        (select pbdc.user_id
                , pbdc.dt
                , transaction_balance_change
                , transaction_balance_change_cs
                , classes
                , classes_cs
                , classes_cs + transaction_balance_change_cs as balance
        from payments_by_dates_cumsum pbdc
                join classes_by_dates_dates_cumsum cbddc
                on pbdc.user_id = cbddc.user_id
                and pbdc.dt = cbddc.dt
                )
--         select *
-- from balances
-- order by 1,2
-- limit 1000
---Шаг 9
select dt
        ,sum(transaction_balance_change) as sum_transaction_balance_change
        , sum(transaction_balance_change_cs)as sum_transaction_balance_change_cs
        , sum (classes)as sum_classes
        , sum (classes_cs)as sum_classes_cs
        , sum (balance)as sum_balance
from balances
group by dt
order by dt
